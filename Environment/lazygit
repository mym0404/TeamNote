git:
  paging:
    colorArg: always
    pager: delta --dark --paging=never
gui:
  sidePanelWidth: 0.33
  expandedSidePanelWeight: 3
  expandFocusedSidePanel: true
  language: en
  timeFormat: 2006/01/02
  shortTimeFormat: 15:04
  showRootItemInFileTree: false
  nerdFontsVersion: ""
  theme:
    activeBorderColor:
      - "#89ace8"
      - bold
    optionsTextColor:
      - "#aec8f2"
    unstagedChangesColor:
      - "#c7b169"
    selectedLineBgColor:
      - "#1b2430"
os:
  edit: 'code {{filename}}'
  editAtLine: 'code {{filename}}'
  editInTerminal: true

customCommands:
  - key: "G"
    context: "global"
    command: "gh repo view --web"
    
  # - key: "<c-v>"
    # command: "git cz c"
    # description: "commit with commitizen"
    # context: "files"
    # loadingText: "opening commitizen commit tool"
    # subprocess: true
  # retrieved from: https://github.com/jesseduffield/lazygit/wiki/Custom-Commands-Compendium#conventional-commit
  - key: "c"
    context: "files,global,worktrees,localBranches,remotes,remoteBranches,tags,commits,reflogCommits"
    description: "Create new conventional commit"
    prompts:
      - type: "menu"
        key: "Type"
        title: "Type of change"
        options:
          - name: "build"
            description: "Changes that affect the build system or external dependencies"
            value: "build"
          - name: "feat"
            description: "A new feature"
            value: "feat"
          - name: "fix"
            description: "A bug fix"
            value: "fix"
          - name: "chore"
            description: "Other changes that don't modify src or test files"
            value: "chore"
          - name: "ci"
            description: "Changes to CI configuration files and scripts"
            value: "ci"
          - name: "docs"
            description: "Documentation only changes"
            value: "docs"
          - name: "perf"
            description: "A code change that improves performance"
            value: "perf"
          - name: "refactor"
            description: "A code change that neither fixes a bug nor adds a feature"
            value: "refactor"
          - name: "revert"
            description: "Reverts a previous commit"
            value: "revert"
          - name: "style"
            description: "Changes that do not affect the meaning of the code"
            value: "style"
          - name: "test"
            description: "Adding missing tests or correcting existing tests"
            value: "test"
      # - type: "input"
        # title: "Scope"
        # key: "Scope"
        # initialValue: ""
      # - type: "menu"
        # key: "Breaking"
        # title: "Breaking change"
        # options:
          # - name: "no"
            # value: ""
          # - name: "yes"
            # value: "!"
      - type: "input"
        title: "message"
        key: "Message"
        initialValue: ""
      # - type: "confirm"
        # key: "Confirm"
        # title: "Commit"
        # body: "Are you sure you want to commit?"
    command: "git commit --message '{{.Form.Type}}: {{.Form.Message}}'"
    # command: "git commit --message '{{.Form.Type}}{{ if .Form.Scope }}({{ .Form.Scope }}){{ end }}{{.Form.Breaking}}: {{.Form.Message}}'"
    loadingText: "Creating conventional commit..."

  - key: "Z"
    context: "global"
    description: "Create new conventional commit"
    prompts:
      - type: "menu"
        key: "Type"
        title: "Type of change"
        options:
          - name: "build"
            description: "Changes that affect the build system or external dependencies"
            value: "build"
          - name: "feat"
            description: "A new feature"
            value: "feat"
          - name: "fix"
            description: "A bug fix"
            value: "fix"
          - name: "chore"
            description: "Other changes that don't modify src or test files"
            value: "chore"
          - name: "ci"
            description: "Changes to CI configuration files and scripts"
            value: "ci"
          - name: "docs"
            description: "Documentation only changes"
            value: "docs"
          - name: "perf"
            description: "A code change that improves performance"
            value: "perf"
          - name: "refactor"
            description: "A code change that neither fixes a bug nor adds a feature"
            value: "refactor"
          - name: "revert"
            description: "Reverts a previous commit"
            value: "revert"
          - name: "style"
            description: "Changes that do not affect the meaning of the code"
            value: "style"
          - name: "test"
            description: "Adding missing tests or correcting existing tests"
            value: "test"
      - type: "input"
        title: "Scope"
        key: "Scope"
        initialValue: ""
      - type: "menu"
        key: "Breaking"
        title: "Breaking change"
        options:
          - name: "no"
            value: ""
          - name: "yes"
            value: "!"
      - type: "input"
        title: "message"
        key: "Message"
        initialValue: ""
      - type: "confirm"
        key: "Confirm"
        title: "Commit"
        body: "Are you sure you want to commit?"
    command: "git commit --message '{{.Form.Type}}{{ if .Form.Scope }}({{ .Form.Scope }}){{ end }}{{.Form.Breaking}}: {{.Form.Message}}'"
    loadingText: "Creating conventional commit..."
